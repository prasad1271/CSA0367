//Array Implementation
#include <stdio.h>
#include <stdlib.h> // For exit()

void stack() {
    int n, top;
    printf("Enter the Size of Stack: ");
    scanf("%d", &n);
    int stack[n];
    top = -1;

    while (1) { // Loop to perform stack operations
        int ch;
        printf("Enter choice (1 for push, 2 for pop, 3 for peek, 4 for display, 0 to exit): ");
        scanf("%d", &ch);

        switch (ch) {
            case 0: // Exit
                exit(0);
                break;
            case 1: // Push operation
                if (top == n - 1) {
                    printf("Stack is overflow.\n");
                } else {
                    int data;
                    printf("Enter the element to insert into stack: ");
                    scanf("%d", &data);
                    top++;
                    stack[top] = data;
                    printf("Element Inserted.\n");
                }
                break;
            case 2: // Pop operation
                if (top == -1) {
                    printf("Stack is empty.\n");
                } else {
                    printf("%d Element Deleted.\n", stack[top]);
                    top--;
                }
                break;
            case 3: // Peek operation
                if (top == -1) {
                    printf("Stack is empty.\n");
                } else {
                    printf("%d is the top element in stack.\n", stack[top]);
                }
                break;
            case 4: // Display operation
                if (top == -1) {
                    printf("Stack is empty.\n");
                } else {
                    printf("Elements in stack: ");
                    for (int i = top; i >= 0; i--) {
                        printf("%d ", stack[i]);
                    }
                    printf("\n");
                }
                break;
            default:
                printf("Invalid choice.\n");
                break;
        }
    }
}

int main() {
    stack();
    return 0;
}
//stack in liked list
#include<stdio.h>
#include<stdlib.h>


struct node
{
    struct node*pre;
    int data;
    struct node*next;
}*top=NULL;

void push()
{
    struct node*new_node=(struct node*)malloc(sizeof(struct node));
    printf("Enter the Element to push :");
    scanf("%d",&new_node->data);
    new_node->next=new_node->pre=NULL;
    if (top==NULL)
    {
        top=new_node;
    }
    else
    {
        new_node->pre=top;
        top->next=new_node;
        top=new_node;
    }
}

void pop()
{
    if (top==NULL)
    {
        printf("\nStack is Empty\n");
    }
    else
    {
    struct node*del=top;
    printf("%d is pop out",top->data);
    top=top->pre;
    free(del);
    }
}
void display()
{
    struct node *temp=top;
    while (temp!=NULL)
    {
        printf("%d ",temp->data);
        temp=temp->pre;
    }
}
int main()
{
    int ch;
    while(1)
    {
        printf("\nchoice the Operation :\n0.Exit\n1.PUSH\n2.POP\n3.DISPLAY\n");
        scanf("%d",&ch);
        switch(ch)
        {
            case 0:
            exit(0);
            case 1:
            push();
            break;
            case 2:
            pop();
            break;
            case 3:
            display();
            break;
            default:
            printf("\nInvalid choice..\n");
            break;
        }
    }
    return 0;
}
