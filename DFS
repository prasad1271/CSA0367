#include <stdio.h>
#include <stdlib.h>

#define MAX_VERTICES 100

typedef struct {
    int data;
    struct Node* next;
} Node;

typedef struct {
    Node* vertices[MAX_VERTICES];
    int numVertices;
} Graph;

void addEdge(Graph* graph, int src, int dest) {
    Node* newNode = (Node*)malloc(sizeof(Node));
    newNode->data = dest;
    newNode->next = graph->vertices[src];
    graph->vertices[src] = newNode;
}

void dfsUtil(Graph* graph, int vertex, int visited[]) {
    visited[vertex] = 1;
    printf("%d ", vertex);

    Node* temp = graph->vertices[vertex];
    while (temp!= NULL) {
        if (!visited[temp->data])
            dfsUtil(graph, temp->data, visited);
        temp = temp->next;
    }
}

void dfs(Graph* graph, int startVertex) {
    int visited[MAX_VERTICES] = {0};
    dfsUtil(graph, startVertex, visited);
    printf("\n");
}

int main() {
    Graph graph;
    graph.numVertices = 6;

    addEdge(&graph, 0, 1);
    addEdge(&graph, 0, 2);
    addEdge(&graph, 1, 3);
    addEdge(&graph, 1, 4);
    addEdge(&graph, 2, 5);

    printf("DFS traversal starting from vertex 0: ");
    dfs(&graph, 0);

    return 0;
}
